// Code generated by ent, DO NOT EDIT.

package productreview

import (
	"entgo.io/ent/dialect/sql"
	"github.com/kvngho/vimeovideoconverter/internal/infrastructure/persistence/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldLTE(FieldID, id))
}

// PlayableVideo applies equality check predicate on the "playable_video" field. It's identical to PlayableVideoEQ.
func PlayableVideo(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldEQ(FieldPlayableVideo, v))
}

// ReviewVideo applies equality check predicate on the "review_video" field. It's identical to ReviewVideoEQ.
func ReviewVideo(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldEQ(FieldReviewVideo, v))
}

// PlayableVideoEQ applies the EQ predicate on the "playable_video" field.
func PlayableVideoEQ(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldEQ(FieldPlayableVideo, v))
}

// PlayableVideoNEQ applies the NEQ predicate on the "playable_video" field.
func PlayableVideoNEQ(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldNEQ(FieldPlayableVideo, v))
}

// PlayableVideoIn applies the In predicate on the "playable_video" field.
func PlayableVideoIn(vs ...string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldIn(FieldPlayableVideo, vs...))
}

// PlayableVideoNotIn applies the NotIn predicate on the "playable_video" field.
func PlayableVideoNotIn(vs ...string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldNotIn(FieldPlayableVideo, vs...))
}

// PlayableVideoGT applies the GT predicate on the "playable_video" field.
func PlayableVideoGT(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldGT(FieldPlayableVideo, v))
}

// PlayableVideoGTE applies the GTE predicate on the "playable_video" field.
func PlayableVideoGTE(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldGTE(FieldPlayableVideo, v))
}

// PlayableVideoLT applies the LT predicate on the "playable_video" field.
func PlayableVideoLT(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldLT(FieldPlayableVideo, v))
}

// PlayableVideoLTE applies the LTE predicate on the "playable_video" field.
func PlayableVideoLTE(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldLTE(FieldPlayableVideo, v))
}

// PlayableVideoContains applies the Contains predicate on the "playable_video" field.
func PlayableVideoContains(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldContains(FieldPlayableVideo, v))
}

// PlayableVideoHasPrefix applies the HasPrefix predicate on the "playable_video" field.
func PlayableVideoHasPrefix(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldHasPrefix(FieldPlayableVideo, v))
}

// PlayableVideoHasSuffix applies the HasSuffix predicate on the "playable_video" field.
func PlayableVideoHasSuffix(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldHasSuffix(FieldPlayableVideo, v))
}

// PlayableVideoEqualFold applies the EqualFold predicate on the "playable_video" field.
func PlayableVideoEqualFold(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldEqualFold(FieldPlayableVideo, v))
}

// PlayableVideoContainsFold applies the ContainsFold predicate on the "playable_video" field.
func PlayableVideoContainsFold(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldContainsFold(FieldPlayableVideo, v))
}

// ReviewVideoEQ applies the EQ predicate on the "review_video" field.
func ReviewVideoEQ(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldEQ(FieldReviewVideo, v))
}

// ReviewVideoNEQ applies the NEQ predicate on the "review_video" field.
func ReviewVideoNEQ(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldNEQ(FieldReviewVideo, v))
}

// ReviewVideoIn applies the In predicate on the "review_video" field.
func ReviewVideoIn(vs ...string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldIn(FieldReviewVideo, vs...))
}

// ReviewVideoNotIn applies the NotIn predicate on the "review_video" field.
func ReviewVideoNotIn(vs ...string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldNotIn(FieldReviewVideo, vs...))
}

// ReviewVideoGT applies the GT predicate on the "review_video" field.
func ReviewVideoGT(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldGT(FieldReviewVideo, v))
}

// ReviewVideoGTE applies the GTE predicate on the "review_video" field.
func ReviewVideoGTE(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldGTE(FieldReviewVideo, v))
}

// ReviewVideoLT applies the LT predicate on the "review_video" field.
func ReviewVideoLT(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldLT(FieldReviewVideo, v))
}

// ReviewVideoLTE applies the LTE predicate on the "review_video" field.
func ReviewVideoLTE(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldLTE(FieldReviewVideo, v))
}

// ReviewVideoContains applies the Contains predicate on the "review_video" field.
func ReviewVideoContains(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldContains(FieldReviewVideo, v))
}

// ReviewVideoHasPrefix applies the HasPrefix predicate on the "review_video" field.
func ReviewVideoHasPrefix(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldHasPrefix(FieldReviewVideo, v))
}

// ReviewVideoHasSuffix applies the HasSuffix predicate on the "review_video" field.
func ReviewVideoHasSuffix(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldHasSuffix(FieldReviewVideo, v))
}

// ReviewVideoEqualFold applies the EqualFold predicate on the "review_video" field.
func ReviewVideoEqualFold(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldEqualFold(FieldReviewVideo, v))
}

// ReviewVideoContainsFold applies the ContainsFold predicate on the "review_video" field.
func ReviewVideoContainsFold(v string) predicate.ProductReview {
	return predicate.ProductReview(sql.FieldContainsFold(FieldReviewVideo, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProductReview) predicate.ProductReview {
	return predicate.ProductReview(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProductReview) predicate.ProductReview {
	return predicate.ProductReview(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProductReview) predicate.ProductReview {
	return predicate.ProductReview(sql.NotPredicates(p))
}
